generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Settings {
  id        Int           @id @default(autoincrement())
  userId    Int           @unique
  theme     String        @db.VarChar(255)
  language  String        @db.VarChar(255)
  monospace Boolean
  createdAt DateTime      @default(now()) @db.DateTime(6)
  updatedAt DateTime      @default(now()) @db.DateTime(6)
  user      User          @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([userId])
}

model Session {
  id          Int      @id @default(autoincrement())
  userId      Int
  ua          Json
  fingerprint String   @db.VarChar(255)
  ip          Json
  createdAt   DateTime @default(now()) @db.DateTime(6)
  updatedAt   DateTime @default(now()) @db.DateTime(6)
  user        User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([fingerprint, userId])
  @@index([userId])
}

model User {
  id            Int        @id @default(autoincrement())
  googleId      String?    @db.VarChar(255)
  facebookId    String?    @db.VarChar(255)
  name          String     @unique @db.VarChar(255)
  description   String?    @db.VarChar(255)
  avatar        String?    @db.VarChar(255)
  email         String     @unique @db.VarChar(255)
  password      String?    @db.VarChar(255)
  createdAt     DateTime   @default(now()) @db.DateTime(6)
  updatedAt     DateTime   @default(now()) @db.DateTime(6)
  deletedAt     DateTime?  @db.DateTime(6)
  githubId      String?    @db.VarChar(255)
  categories    Category[]
  posts         Post[]
  sessions      Session[]
  settings      Settings?
}

model Category {
  id            Int       @id @default(autoincrement())
  userId        Int
  name          String    @db.VarChar(255)
  description   String    @db.VarChar(255)
  createdAt     DateTime  @default(now()) @db.DateTime(6)
  updatedAt     DateTime  @default(now()) @db.DateTime(6)
  deletedAt     DateTime? @db.DateTime(6)
  user          User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posts         Post[]

  @@unique([name, userId])
  @@index([userId])
}

model Post {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  description   String    @db.VarChar(255)
  markdown      String    @db.Text
  image         String?   @db.VarChar(255)
  userId        Int
  categoryId    Int
  createdAt     DateTime  @default(now()) @db.DateTime(6)
  updatedAt     DateTime  @default(now()) @db.DateTime(6)
  deletedAt     DateTime? @db.DateTime(6)
  category      Category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([name, userId, categoryId])
  @@index([categoryId])
  @@index([userId])
}
